{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","images","props","step","frameSize","itemWidth","animationDuration","infinite","moveAfterPunch","renderImages","map","image","index","src","alt","style","width","buttonSlider","event","lastPlace","length","absMoveAfterPunch","Math","abs","prevResolve","nextResolve","currentTarget","value","setState","this","className","transform","transitionDuration","type","onClick","htmlFor","min","max","placeholder","elem","onFocus","onBlur","id","defaultValue","checked","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"uPAsBMA,E,4MACJC,MAAQ,CACNC,OAAQ,EAAKC,MAAMD,OACnBE,KAAM,EAAKD,MAAMC,KACjBC,UAAW,EAAKF,MAAME,UACtBC,UAAW,EAAKH,MAAMG,UACtBC,kBAAmB,EAAKJ,MAAMI,kBAC9BC,SAAU,EAAKL,MAAMK,SACrBC,eAAgB,G,EAGlBC,aAAe,SAACR,GAAD,OAAsBA,EAAOS,KAAI,SAACC,EAAOC,GACtD,OACE,6BACE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBG,MAAO,CACLC,MAAM,GAAD,OAAK,EAAKhB,MAAMK,UAAhB,UALX,UAAYO,EAAQ,Q,EAYxBK,aAAe,SAACC,GACd,MAEI,EAAKlB,MADPC,EADF,EACEA,OAAQO,EADV,EACUA,eAAgBH,EAD1B,EAC0BA,UAAWD,EADrC,EACqCA,UAAWD,EADhD,EACgDA,KAAMI,EADtD,EACsDA,SAIhDY,EAAYlB,EAAOmB,OAASf,EAAYD,EAAYC,EACpDgB,EAAoBC,KAAKC,IAAIf,GAC7BgB,EAAcH,EAAoBjB,EAAYC,EAC9CoB,EAAcJ,EAAqBF,EAAYf,EAAYC,EAEjE,OAAQa,EAAMQ,cAAcC,OAC1B,IAAK,OACCH,EACF,EAAKI,SAAS,CACZpB,eAAgBA,EAAiBL,EAAOE,IAEjCG,EAZI,EAab,EAAKoB,SAAS,CACZpB,eAdW,IAgBJD,GACT,EAAKqB,SAAS,CACZpB,gBAAkBW,IAItB,MACF,IAAK,OACCM,EACF,EAAKG,SAAS,CACZpB,eAAgBA,EAAiBL,EAAOE,IAEjCgB,EAAoBF,EAC7B,EAAKS,SAAS,CACZpB,gBAAkBW,IAEXZ,GACT,EAAKqB,SAAS,CACZpB,eAlCW,M,4CA6CrB,WAA2B,IAAD,OACxB,EAOIqB,KAAK7B,MANPG,EADF,EACEA,KACAF,EAFF,EAEEA,OACAI,EAHF,EAGEA,UACAD,EAJF,EAIEA,UACAE,EALF,EAKEA,kBACAE,EANF,EAMEA,eAGF,OACE,sBAAKsB,UAAU,WAAf,UACE,yBACEA,UAAU,gBACVf,MAAO,CACLC,MAAOX,EAAYD,GAHvB,SAME,oBACE0B,UAAU,iBACVf,MAAO,CACLgB,UAAU,cAAD,OAAgBvB,EAAhB,OACTwB,mBAAmB,GAAD,OAAK1B,EAAL,OAJtB,SAOGuB,KAAKpB,aAAaR,OAGvB,0BAAS6B,UAAU,gBAAnB,UACE,sBAAKA,UAAU,iBAAf,UACE,wBACEG,KAAK,SACLH,UAAU,gBACV,UAAQ,OACRH,MAAM,OACNO,QAASL,KAAKZ,aALhB,kBASA,wBACEgB,KAAK,SACLH,UAAU,gBACV,UAAQ,OACRH,MAAM,OACNO,QAASL,KAAKZ,aALhB,qBAUF,sBAAKa,UAAU,iBAAf,UACE,wBAAOK,QAAQ,OAAf,UACG,SACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLC,IAAKpC,EAAOmB,OACZkB,YAAW,UAAKnC,GAChB+B,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAEzB,MAAOoC,EAAKb,cAAcC,SACxCa,QAAS,SAACD,GAERA,EAAKb,cAAcC,MAAnB,UAA8BxB,IAEhCsC,OAAQ,SAACF,GAEPA,EAAKb,cAAcC,MAAQ,SAKjC,uBACEM,KAAK,QACLS,GAAG,OACHN,IAAK,EACLC,IAAKpC,EAAOmB,OACZc,QAAS,SAACK,GACR,EAAKX,SAAS,CAAEzB,MAAOoC,EAAKb,cAAcC,SAE5CgB,aAAcxC,OAGlB,sBAAK2B,UAAU,wBAAf,UACE,wBAAOK,QAAQ,aAAf,UACG,eACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,IACLjC,KAAM,EACNkC,IAAK,IACLC,YAAW,UAAKjC,GAChB6B,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAEvB,WAAYkC,EAAKb,cAAcC,SAC7Ca,QAAS,SAACD,GAERA,EAAKb,cAAcC,MAAnB,UAA8BtB,IAEhCoC,OAAQ,SAACF,GAEPA,EAAKb,cAAcC,MAAQ,SAIjC,uBACEM,KAAK,QACLS,GAAG,aACHN,IAAK,IACLjC,KAAM,EACNkC,IAAK,IACLH,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAEvB,WAAYkC,EAAKb,cAAcC,SAC7CgB,aAActC,OAGlB,sBAAKyB,UAAU,sBAAf,UACE,wBAAOK,QAAQ,aAAf,UACG,eACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLC,IAAKhC,EAAYJ,EAAOmB,OACxBkB,YAAW,UAAKlC,GAChB8B,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAExB,WAAYmC,EAAKb,cAAcC,SAC7Ca,QAAS,SAACD,GAERA,EAAKb,cAAcC,MAAnB,UAA8BvB,IAEhCqC,OAAQ,SAACF,GAEPA,EAAKb,cAAcC,MAAQ,SAKjC,uBACEM,KAAK,QACLS,GAAG,aACHN,IAAK,EACLC,IAAKpC,EAAOmB,OACZc,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAExB,WAAYmC,EAAKb,cAAcC,SAC7CgB,aAAcvC,OAGlB,sBAAK0B,UAAU,8BAAf,UACE,wBAAOK,QAAQ,aAAf,UACG,uBACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLjC,KAAM,IACNkC,IAAK,IACLC,YAAW,UAAKhC,GAChB4B,QAAS,SAACK,GAAD,OAAU,EAAKX,SAAS,CAC/BtB,mBAAoBiC,EAAKb,cAAcC,SAEzCa,QAAS,SAACD,GAERA,EAAKb,cAAcC,MAAnB,UAA8BrB,IAEhCmC,OAAQ,SAACF,GAEPA,EAAKb,cAAcC,MAAQ,SAKjC,uBACEM,KAAK,QACLG,IAAK,EACLjC,KAAM,IACNkC,IAAK,IACLH,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAEtB,mBAAoBiC,EAAKb,cAAcC,SACrDgB,aAAcrC,OAGlB,sBAAKwB,UAAU,qBAAf,UACE,uBAAOK,QAAQ,WAAf,SAA2B,eAC3B,uBACEF,KAAK,WACLS,GAAG,WACHR,QAAS,SAACK,GAAD,OAAU,EAChBX,SAAS,CAAErB,SAAUgC,EAAKb,cAAckB,0B,GAtQlCC,IAAMC,WA+Qd/C,ICxRTgD,E,4MACJ/C,MAAQ,CACNC,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFI,UAAW,IACXD,UAAW,EACXD,KAAM,EACNG,kBAAmB,IACnBC,UAAU,G,4CAGZ,WACE,MAEIsB,KAAK7B,MADPC,EADF,EACEA,OAAQI,EADV,EACUA,UAAWD,EADrB,EACqBA,UAAWD,EADhC,EACgCA,KAAMG,EADtC,EACsCA,kBAAmBC,EADzD,EACyDA,SAGzD,OACE,sBAAKuB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsC7B,EAAOmB,OAA7C,aAEA,cAAC,EAAD,CACEnB,OAAQA,EACRE,KAAMA,EACNC,UAAWA,EACXC,UAAWA,EACXC,kBAAmBA,EACnBC,SAAUA,W,GApCFsC,IAAMC,WA2CTC,ICrDfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.02c031c0.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n};\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n  moveAfterPunch: number;\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    images: this.props.images,\n    step: this.props.step,\n    frameSize: this.props.frameSize,\n    itemWidth: this.props.itemWidth,\n    animationDuration: this.props.animationDuration,\n    infinite: this.props.infinite,\n    moveAfterPunch: 0,\n  };\n\n  renderImages = (images: string[]) => images.map((image, index) => {\n    return (\n      <li key={`${index + 1}`}>\n        <img\n          src={image}\n          alt={`${index + 1}`}\n          style={{\n            width: `${this.state.itemWidth}px`,\n          }}\n        />\n      </li>\n    );\n  });\n\n  buttonSlider = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const {\n      images, moveAfterPunch, itemWidth, frameSize, step, infinite,\n    } = this.state;\n\n    const firstPlace = 0;\n    const lastPlace = images.length * itemWidth - frameSize * itemWidth;\n    const absMoveAfterPunch = Math.abs(moveAfterPunch);\n    const prevResolve = absMoveAfterPunch > frameSize * itemWidth;\n    const nextResolve = absMoveAfterPunch < (lastPlace - frameSize * itemWidth);\n\n    switch (event.currentTarget.value) {\n      case 'Prev':\n        if (prevResolve) {\n          this.setState({\n            moveAfterPunch: moveAfterPunch + step * itemWidth,\n          });\n        } else if (moveAfterPunch < firstPlace) {\n          this.setState({\n            moveAfterPunch: firstPlace,\n          });\n        } else if (infinite) {\n          this.setState({\n            moveAfterPunch: -(lastPlace),\n          });\n        }\n\n        break;\n      case 'Next':\n        if (nextResolve) {\n          this.setState({\n            moveAfterPunch: moveAfterPunch - step * itemWidth,\n          });\n        } else if (absMoveAfterPunch < lastPlace) {\n          this.setState({\n            moveAfterPunch: -(lastPlace),\n          });\n        } else if (infinite) {\n          this.setState({\n            moveAfterPunch: firstPlace,\n          });\n        }\n\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  render(): React.ReactNode {\n    const {\n      step,\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      moveAfterPunch,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <section\n          className=\"container_one\"\n          style={{\n            width: itemWidth * frameSize,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${moveAfterPunch}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            {this.renderImages(images)}\n          </ul>\n        </section>\n        <section className=\"container_two\">\n          <div className=\"Carousel__move\">\n            <button\n              type=\"button\"\n              className=\"ButtonElement\"\n              data-cy=\"Prev\"\n              value=\"Prev\"\n              onClick={this.buttonSlider}\n            >\n              Prev\n            </button>\n            <button\n              type=\"button\"\n              className=\"ButtonElement\"\n              data-cy=\"Next\"\n              value=\"Next\"\n              onClick={this.buttonSlider}\n            >\n              Next\n            </button>\n          </div>\n          <div className=\"Carousel__step\">\n            <label htmlFor=\"step\">\n              {'Step: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={1}\n                max={images.length}\n                placeholder={`${step}`}\n                onClick={(elem) => this\n                  .setState({ step: +elem.currentTarget.value })}\n                onFocus={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = `${step}`;\n                }}\n                onBlur={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = '';\n                }}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              id=\"step\"\n              min={1}\n              max={images.length}\n              onClick={(elem) => {\n                this.setState({ step: +elem.currentTarget.value });\n              }}\n              defaultValue={step}\n            />\n          </div>\n          <div className=\"Carousel__image_width\">\n            <label htmlFor=\"image_size\">\n              {'Image Size: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={130}\n                step={5}\n                max={370}\n                placeholder={`${itemWidth}`}\n                onClick={(elem) => this\n                  .setState({ itemWidth: +elem.currentTarget.value })}\n                onFocus={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = `${itemWidth}`;\n                }}\n                onBlur={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = '';\n                }}\n              />\n            </label>\n            <input\n              type=\"range\"\n              id=\"image_size\"\n              min={130}\n              step={5}\n              max={370}\n              onClick={(elem) => this\n                .setState({ itemWidth: +elem.currentTarget.value })}\n              defaultValue={itemWidth}\n            />\n          </div>\n          <div className=\"Carousel__frameSize\">\n            <label htmlFor=\"frame_size\">\n              {'Frame Size: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={1}\n                max={itemWidth * images.length}\n                placeholder={`${frameSize}`}\n                onClick={(elem) => this\n                  .setState({ frameSize: +elem.currentTarget.value })}\n                onFocus={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = `${frameSize}`;\n                }}\n                onBlur={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = '';\n                }}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              id=\"frame_size\"\n              min={1}\n              max={images.length}\n              onClick={(elem) => this\n                .setState({ frameSize: +elem.currentTarget.value })}\n              defaultValue={frameSize}\n            />\n          </div>\n          <div className=\"Carousel__animationDuration\">\n            <label htmlFor=\"frame_size\">\n              {'Animation duration: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={0}\n                step={200}\n                max={2000}\n                placeholder={`${animationDuration}`}\n                onClick={(elem) => this.setState({\n                  animationDuration: +elem.currentTarget.value,\n                })}\n                onFocus={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = `${animationDuration}`;\n                }}\n                onBlur={(elem) => {\n                  // eslint-disable-next-line no-param-reassign\n                  elem.currentTarget.value = '';\n                }}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              min={0}\n              step={500}\n              max={2000}\n              onClick={(elem) => this\n                .setState({ animationDuration: +elem.currentTarget.value })}\n              defaultValue={animationDuration}\n            />\n          </div>\n          <div className=\"Carousel__infinite\">\n            <label htmlFor=\"infinite\">{'Infinite: '}</label>\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              onClick={(elem) => this\n                .setState({ infinite: elem.currentTarget.checked })}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}