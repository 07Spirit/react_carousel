{"version":3,"sources":["components/renderImages.tsx","components/Carousel.tsx","App.tsx","index.tsx"],"names":["RenderImages","images","pass","map","image","index","src","alt","style","width","itemWidth","Carousel","state","props","moveAfterPunch","buttonPrev","frameSize","step","infinite","lastPlace","length","Math","abs","setState","buttonNext","eventClick","elem","mark","currentTarget","value","animationDuration","eventFocus","eventBlur","this","className","transform","transitionDuration","type","onClick","htmlFor","min","max","placeholder","event","onFocus","onBlur","id","defaultValue","checked","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"gQAAaA,EAGR,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,KACd,OAAOD,EAAOE,KAAI,SAACC,EAAOC,GACxB,OACE,6BACE,qBACEC,IAAKF,EACLG,IAAG,UAAKF,EAAQ,GAChBG,MAAO,CACLC,MAAM,GAAD,OAAKP,EAAKQ,UAAV,UALX,UAAYL,EAAQ,QCGpBM,E,4MACJC,M,2BACK,EAAKC,O,IACRC,eAAgB,I,EAGlBC,WAAa,WACX,MAEI,EAAKH,MADPX,EADF,EACEA,OAAQa,EADV,EACUA,eAAgBJ,EAD1B,EAC0BA,UAAWM,EADrC,EACqCA,UAAWC,EADhD,EACgDA,KAAMC,EADtD,EACsDA,SAIhDC,EAAYlB,EAAOmB,OAASV,EAAYM,EAAYN,EACtCW,KAAKC,IAAIR,GAAkBE,EAAYN,GACtDO,GAAQhB,EAAOmB,OAASJ,EAG3B,EAAKO,SAAS,CACZT,eAAgBA,EAAiBG,EAAOP,IAEjCI,EATQ,EAUjB,EAAKS,SAAS,CACZT,eAXe,IAaRI,GACT,EAAKK,SAAS,CACZT,gBAAkBK,K,EAKxBK,WAAa,WACX,MAEI,EAAKZ,MADPX,EADF,EACEA,OAAQa,EADV,EACUA,eAAgBJ,EAD1B,EAC0BA,UAAWM,EADrC,EACqCA,UAAWC,EADhD,EACgDA,KAAMC,EADtD,EACsDA,SAGhDC,EAAYlB,EAAOmB,OAASV,EAAYM,EAAYN,EACtCW,KAAKC,IAAIR,GAC1BK,EAAYH,EAAYN,GAAcO,GAAQhB,EAAOmB,OAASJ,EAG/D,EAAKO,SAAS,CACZT,eAAgBA,EAAiBG,EAAOP,IAEjCW,KAAKC,IAAIR,GAAkBK,EACpC,EAAKI,SAAS,CACZT,gBAAkBK,IAEXD,GACT,EAAKK,SAAS,CACZT,eAfe,K,EAoBrBW,WAAa,SAACC,EAAWC,GACV,SAATA,EACF,EAAKJ,SAAS,CAAEN,MAAOS,EAAKE,cAAcC,QACxB,cAATF,EACT,EAAKJ,SAAS,CAAEb,WAAYgB,EAAKE,cAAcC,QAC7B,cAATF,EACT,EAAKJ,SAAS,CAAEP,WAAYU,EAAKE,cAAcC,QAC7B,sBAATF,GACT,EAAKJ,SAAS,CAAEO,mBAAoBJ,EAAKE,cAAcC,S,EAI3DE,WAAa,SAACL,EAAWC,GAEvBD,EAAKE,cAAcC,MAAQF,G,EAG7BK,UAAY,SAACN,GAEXA,EAAKE,cAAcC,MAAQ,I,4CAG7B,WAA2B,IAAD,OACxB,EAOII,KAAKrB,MANPK,EADF,EACEA,KACAhB,EAFF,EAEEA,OACAS,EAHF,EAGEA,UACAM,EAJF,EAIEA,UACAc,EALF,EAKEA,kBACAhB,EANF,EAMEA,eAGF,OACE,sBAAKoB,UAAU,WAAf,UACE,yBACEA,UAAU,gBACV1B,MAAO,CACLC,MAAOC,EAAYM,GAHvB,SAME,oBACEkB,UAAU,iBACV1B,MAAO,CACL2B,UAAU,cAAD,OAAgBrB,EAAhB,OACTsB,mBAAmB,GAAD,OAAKN,EAAL,OAJtB,SAOE,cAAC,EAAD,CAAc7B,OAAQA,EAAQC,KAAM+B,KAAKrB,YAG7C,0BAASsB,UAAU,gBAAnB,UACE,sBAAKA,UAAU,iBAAf,UACE,wBACEG,KAAK,SACLH,UAAU,gBACV,UAAQ,OACRL,MAAM,OACNS,QAASL,KAAKlB,WALhB,kBASA,wBACEsB,KAAK,SACLH,UAAU,gBACV,UAAQ,OACRL,MAAM,OACNS,QAASL,KAAKT,WALhB,qBAUF,sBAAKU,UAAU,iBAAf,UACE,wBAAOK,QAAQ,OAAf,UACG,SACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLC,IAAKxC,EAAOmB,OACZsB,YAAW,UAAKzB,GAChBqB,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,SAEzBC,QAAS,SAACD,GACR,EAAKZ,WAAWY,EAAO1B,IAEzB4B,OAAQZ,KAAKD,eAIjB,uBACEK,KAAK,QACLS,GAAG,OACHN,IAAK,EACLC,IAAKxC,EAAOmB,OACZkB,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,SAEzBI,aAAc9B,OAGlB,sBAAKiB,UAAU,wBAAf,UACE,wBAAOK,QAAQ,aAAf,UACG,eACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,IACLvB,KAAM,EACNwB,IAAK,IACLC,YAAW,UAAKhC,GAChB4B,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,cAEzBC,QAAS,SAACD,GACR,EAAKZ,WAAWY,EAAOjC,IAEzBmC,OAAQZ,KAAKD,eAGjB,uBACEK,KAAK,QACLS,GAAG,aACHN,IAAK,IACLvB,KAAM,EACNwB,IAAK,IACLH,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,cAEzBI,aAAcrC,OAGlB,sBAAKwB,UAAU,sBAAf,UACE,wBAAOK,QAAQ,aAAf,UACG,eACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLC,IAAK/B,EAAYT,EAAOmB,OACxBsB,YAAW,UAAK1B,GAChBsB,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,cAEzBC,QAAS,SAACD,GACR,EAAKZ,WAAWY,EAAO3B,IAEzB6B,OAAQZ,KAAKD,eAIjB,uBACEK,KAAK,QACLS,GAAG,aACHN,IAAK,EACLC,IAAKxC,EAAOmB,OACZkB,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,cAEzBI,aAAc/B,OAGlB,sBAAKkB,UAAU,8BAAf,UACE,wBAAOK,QAAQ,oBAAf,UACG,uBACD,uBACEF,KAAK,SACLH,UAAU,aACVM,IAAK,EACLvB,KAAM,IACNwB,IAAK,IACLC,YAAW,UAAKZ,GAChBQ,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,sBAEzBC,QAAS,SAACD,GACR,EAAKZ,WAAWY,EAAOb,IAEzBe,OAAQZ,KAAKD,eAIjB,uBACEK,KAAK,QACLS,GAAG,oBACHN,IAAK,EACLvB,KAAM,IACNwB,IAAK,IACLH,QAAU,SAAAK,GACR,EAAKlB,WAAWkB,EAAO,sBAEzBI,aAAcjB,OAGlB,sBAAKI,UAAU,qBAAf,UACE,uBAAOK,QAAQ,WAAf,SAA2B,eAC3B,uBACEF,KAAK,WACLS,GAAG,WACHR,QAAS,SAACZ,GAAD,OAAU,EAChBH,SAAS,CAAEL,SAAUQ,EAAKE,cAAcoB,0B,GA/PlCC,IAAMC,WAwQdvC,ICpQTwC,E,4MACJvC,MAAQ,CACNX,OAAQ,CACN,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,cACA,gBAEFS,UAAW,IACXM,UAAW,EACXC,KAAM,EACNa,kBAAmB,IACnBZ,UAAU,G,4CAGZ,WACE,MAEIe,KAAKrB,MADPX,EADF,EACEA,OAAQS,EADV,EACUA,UAAWM,EADrB,EACqBA,UAAWC,EADhC,EACgCA,KAAMa,EADtC,EACsCA,kBAAmBZ,EADzD,EACyDA,SAGzD,OACE,sBAAKgB,UAAU,MAAf,UACE,oBAAI,UAAQ,QAAZ,iCAAsCjC,EAAOmB,OAA7C,aAEA,cAAC,EAAD,CACEnB,OAAQA,EACRgB,KAAMA,EACND,UAAWA,EACXN,UAAWA,EACXoB,kBAAmBA,EACnBZ,SAAUA,W,GApCF+B,IAAMC,WA2CTC,ICrDfC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.744ca6d8.chunk.js","sourcesContent":["export const RenderImages: React.FC <{\n  images: string[];\n  pass: { itemWidth: number };\n}> = ({ images, pass }): any => {\n  return images.map((image, index) => {\n    return (\n      <li key={`${index + 1}`}>\n        <img\n          src={image}\n          alt={`${index + 1}`}\n          style={{\n            width: `${pass.itemWidth}px`,\n          }}\n        />\n      </li>\n    );\n  });\n};\n","import React from 'react';\nimport './Carousel.scss';\nimport { RenderImages } from './renderImages';\nimport { Props } from '../types/Props';\n\ninterface State extends Props{\n  moveAfterPunch: number;\n}\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    ...this.props,\n    moveAfterPunch: 0,\n  };\n\n  buttonPrev = () => {\n    const {\n      images, moveAfterPunch, itemWidth, frameSize, step, infinite,\n    } = this.state;\n\n    const firstPlace = 0;\n    const lastPlace = images.length * itemWidth - frameSize * itemWidth;\n    const prevResolve = Math.abs(moveAfterPunch) > frameSize * itemWidth\n      && step <= images.length - frameSize;\n\n    if (prevResolve) {\n      this.setState({\n        moveAfterPunch: moveAfterPunch + step * itemWidth,\n      });\n    } else if (moveAfterPunch < firstPlace) {\n      this.setState({\n        moveAfterPunch: firstPlace,\n      });\n    } else if (infinite) {\n      this.setState({\n        moveAfterPunch: -(lastPlace),\n      });\n    }\n  };\n\n  buttonNext = () => {\n    const {\n      images, moveAfterPunch, itemWidth, frameSize, step, infinite,\n    } = this.state;\n    const firstPlace = 0;\n    const lastPlace = images.length * itemWidth - frameSize * itemWidth;\n    const nextResolve = Math.abs(moveAfterPunch)\n    < (lastPlace - frameSize * itemWidth) && step <= images.length - frameSize;\n\n    if (nextResolve) {\n      this.setState({\n        moveAfterPunch: moveAfterPunch - step * itemWidth,\n      });\n    } else if (Math.abs(moveAfterPunch) < lastPlace) {\n      this.setState({\n        moveAfterPunch: -(lastPlace),\n      });\n    } else if (infinite) {\n      this.setState({\n        moveAfterPunch: firstPlace,\n      });\n    }\n  };\n\n  eventClick = (elem: any, mark: string) => {\n    if (mark === 'step') {\n      this.setState({ step: +elem.currentTarget.value });\n    } else if (mark === 'itemWidth') {\n      this.setState({ itemWidth: +elem.currentTarget.value });\n    } else if (mark === 'frameSize') {\n      this.setState({ frameSize: +elem.currentTarget.value });\n    } else if (mark === 'animationDuration') {\n      this.setState({ animationDuration: +elem.currentTarget.value });\n    }\n  };\n\n  eventFocus = (elem: any, mark: number) => {\n    // eslint-disable-next-line no-param-reassign\n    elem.currentTarget.value = mark;\n  };\n\n  eventBlur = (elem: any) => {\n    // eslint-disable-next-line no-param-reassign\n    elem.currentTarget.value = '';\n  };\n\n  render(): React.ReactNode {\n    const {\n      step,\n      images,\n      itemWidth,\n      frameSize,\n      animationDuration,\n      moveAfterPunch,\n    } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <section\n          className=\"container_one\"\n          style={{\n            width: itemWidth * frameSize,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${moveAfterPunch}px)`,\n              transitionDuration: `${animationDuration}ms`,\n            }}\n          >\n            <RenderImages images={images} pass={this.state} />\n          </ul>\n        </section>\n        <section className=\"container_two\">\n          <div className=\"Carousel__move\">\n            <button\n              type=\"button\"\n              className=\"ButtonElement\"\n              data-cy=\"Prev\"\n              value=\"Prev\"\n              onClick={this.buttonPrev}\n            >\n              Prev\n            </button>\n            <button\n              type=\"button\"\n              className=\"ButtonElement\"\n              data-cy=\"Next\"\n              value=\"Next\"\n              onClick={this.buttonNext}\n            >\n              Next\n            </button>\n          </div>\n          <div className=\"Carousel__step\">\n            <label htmlFor=\"step\">\n              {'Step: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={1}\n                max={images.length}\n                placeholder={`${step}`}\n                onClick={(event => {\n                  this.eventClick(event, 'step');\n                })}\n                onFocus={(event) => {\n                  this.eventFocus(event, step);\n                }}\n                onBlur={this.eventBlur}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              id=\"step\"\n              min={1}\n              max={images.length}\n              onClick={(event => {\n                this.eventClick(event, 'step');\n              })}\n              defaultValue={step}\n            />\n          </div>\n          <div className=\"Carousel__image_width\">\n            <label htmlFor=\"image_size\">\n              {'Image Size: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={130}\n                step={5}\n                max={370}\n                placeholder={`${itemWidth}`}\n                onClick={(event => {\n                  this.eventClick(event, 'itemWidth');\n                })}\n                onFocus={(event) => {\n                  this.eventFocus(event, itemWidth);\n                }}\n                onBlur={this.eventBlur}\n              />\n            </label>\n            <input\n              type=\"range\"\n              id=\"image_size\"\n              min={130}\n              step={5}\n              max={370}\n              onClick={(event => {\n                this.eventClick(event, 'itemWidth');\n              })}\n              defaultValue={itemWidth}\n            />\n          </div>\n          <div className=\"Carousel__frameSize\">\n            <label htmlFor=\"frame_size\">\n              {'Frame Size: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={1}\n                max={itemWidth * images.length}\n                placeholder={`${frameSize}`}\n                onClick={(event => {\n                  this.eventClick(event, 'frameSize');\n                })}\n                onFocus={(event) => {\n                  this.eventFocus(event, frameSize);\n                }}\n                onBlur={this.eventBlur}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              id=\"frame_size\"\n              min={1}\n              max={images.length}\n              onClick={(event => {\n                this.eventClick(event, 'frameSize');\n              })}\n              defaultValue={frameSize}\n            />\n          </div>\n          <div className=\"Carousel__animationDuration\">\n            <label htmlFor=\"animationDuration\">\n              {'Animation duration: '}\n              <input\n                type=\"number\"\n                className=\"inputBlock\"\n                min={0}\n                step={200}\n                max={2000}\n                placeholder={`${animationDuration}`}\n                onClick={(event => {\n                  this.eventClick(event, 'animationDuration');\n                })}\n                onFocus={(event) => {\n                  this.eventFocus(event, animationDuration);\n                }}\n                onBlur={this.eventBlur}\n              />\n            </label>\n\n            <input\n              type=\"range\"\n              id=\"animationDuration\"\n              min={0}\n              step={500}\n              max={2000}\n              onClick={(event => {\n                this.eventClick(event, 'animationDuration');\n              })}\n              defaultValue={animationDuration}\n            />\n          </div>\n          <div className=\"Carousel__infinite\">\n            <label htmlFor=\"infinite\">{'Infinite: '}</label>\n            <input\n              type=\"checkbox\"\n              id=\"infinite\"\n              onClick={(elem) => this\n                .setState({ infinite: elem.currentTarget.checked })}\n            />\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  render() {\n    const {\n      images, itemWidth, frameSize, step, animationDuration, infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\">{`Carousel with ${images.length} images`}</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}